[{"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/index.js":"1","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/reportWebVitals.js":"2","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/store.js":"3","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/reducers/index.js":"4","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/reducers/errorReducer.js":"5","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/reducers/successReducer.js":"6","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/reducers/userReducer.js":"7","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/App.js":"8","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/Layouts/Header.js":"9","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/Layouts/Hero.js":"10","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/MobileNav.js":"11","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/NavBar.js":"12","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/auth/SignUp.js":"13","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/auth/Login.js":"14","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/HomePage.js":"15","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/actions/userAction.js":"16","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/actions/successWithMessage.js":"17","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/Layouts/Success.js":"18","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/User.js":"19","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/Layouts/Footer.js":"20","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/Dashboard.js":"21","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/Layouts/Err.js":"22"},{"size":610,"mtime":1609581413728,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1609572311596,"results":"25","hashOfConfig":"24"},{"size":383,"mtime":1609573771352,"results":"26","hashOfConfig":"24"},{"size":317,"mtime":1609580846002,"results":"27","hashOfConfig":"24"},{"size":284,"mtime":1609712459360,"results":"28","hashOfConfig":"24"},{"size":377,"mtime":1609593821759,"results":"29","hashOfConfig":"24"},{"size":572,"mtime":1609688704704,"results":"30","hashOfConfig":"24"},{"size":1416,"mtime":1609712840796,"results":"31","hashOfConfig":"24"},{"size":496,"mtime":1609582180576,"results":"32","hashOfConfig":"24"},{"size":1070,"mtime":1609592256592,"results":"33","hashOfConfig":"24"},{"size":2613,"mtime":1609693221513,"results":"34","hashOfConfig":"24"},{"size":2315,"mtime":1609693171077,"results":"35","hashOfConfig":"24"},{"size":3949,"mtime":1609688487139,"results":"36","hashOfConfig":"24"},{"size":2765,"mtime":1609592548704,"results":"37","hashOfConfig":"24"},{"size":795,"mtime":1609616035188,"results":"38","hashOfConfig":"24"},{"size":1491,"mtime":1609712411525,"results":"39","hashOfConfig":"24"},{"size":232,"mtime":1609597592799,"results":"40","hashOfConfig":"24"},{"size":1611,"mtime":1609686725229,"results":"41","hashOfConfig":"24"},{"size":510,"mtime":1609711809728,"results":"42","hashOfConfig":"24"},{"size":2142,"mtime":1609670176255,"results":"43","hashOfConfig":"24"},{"size":832,"mtime":1609713032518,"results":"44","hashOfConfig":"24"},{"size":1540,"mtime":1609713096325,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1gu1hx7",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/index.js",[],["94","95"],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/reportWebVitals.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/store.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/reducers/index.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/reducers/errorReducer.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/reducers/successReducer.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/reducers/userReducer.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/App.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/Layouts/Header.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/Layouts/Hero.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/MobileNav.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/NavBar.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/auth/SignUp.js",["96"],"\nimport React, { Component } from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { createUser } from '../../store/actions/userAction';\nimport successWithMessage from '../../store/actions/successWithMessage';\nclass SignUp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isSubmit: false,\n      userData: {\n        email: '',\n        password: '',\n        firstname: '',\n        lastname: '',\n        password_confirmation: '',\n      },\n    };\n  }\n\n  componentDidUpdate(){\n    const curUser = localStorage.getItem('currentUser');\n    const { successWithMessage, currentUser, history } = this.props\n    if (currentUser.length || curUser){\n      successWithMessage(\"You are Logged In.\")\n      history.push(`/dashboard/keli`)\n    }\n      \n\n  }\n\n  render() {\n    const handleChange = e => {\n      const { userData } = this.state;\n      const { id, value } = e.target;\n      this.setState({\n        ...this.state,\n        userData: {\n          ...userData,\n          [id]: value,\n        },\n      });\n    };\n    const {\n      createUser,\n    } = this.props;\n    const { isSubmit } = this.state;\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      const { userData } = this.state;\n      this.setState({ isSubmit: true });\n      createUser(userData)\n    };\n\n    return (\n      <div className=\"signup auth\">\n        <h1 className=\"display-6 mb-3  font-weight-bolder text-center\">\n          Sign Up\n        </h1>\n        <Form\n          className=\"user-form p-5 shadow-lg bg-white\"\n          onSubmit={handleSubmit}\n        >\n\n          <Form.Group controlId=\"firstname\">\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter your first name\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"lastname\">\n            <Form.Control\n              required\n              type=\"text\"\n              placeholder=\"Enter your last name\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"email\">\n            <Form.Control\n              required\n              type=\"email\"\n              placeholder=\"Enter email\"\n              onChange={handleChange}\n            />\n            <Form.Text className=\"text-muted\">\n              We will never share your email with anyone else.\n            </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"password\">\n            <Form.Control\n              required\n              type=\"password\"\n              placeholder=\"Password\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Form.Group controlId=\"password_confirmation\">\n            <Form.Control\n              required\n              type=\"password\"\n              placeholder=\"confirm you password\"\n              onChange={handleChange}\n            />\n          </Form.Group>\n\n          <Button className=\"btn hero-btn w-100\" type=\"submit\">\n            Submit\n          </Button>\n          <p className=\"text-center mt-3 font-weight-bolder auth-text\">OR</p>\n\n          <a href=\"/login\" className=\"my-3 text-center w-100 btn-link\">\n            {' '}\n            Log In\n          </a>\n        </Form>\n      </div>\n    );\n  }\n}\nSignUp.propTypes = {\n  currentUser: PropTypes.any,\n  loading: PropTypes.string,\n  errors: PropTypes.any,\n  loggedIn: PropTypes.any,\n  username: PropTypes.any,\n  success: PropTypes.any,\n  authUser: PropTypes.func.isRequired,\n  createUser: PropTypes.func.isRequired,\n  fetchUser: PropTypes.func.isRequired,\n  unLoad: PropTypes.func.isRequired,\n  history: PropTypes.any,\n};\nconst mapStateToProps = state => ({\n  success: state.succMsg.loggedIn,\n  currentUser: state.userData.currentUser,\n});\nexport default connect(mapStateToProps, {\n  createUser,\n  successWithMessage,\n})(SignUp);","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/auth/Login.js",["97","98","99","100"],"import React, { Component } from \"react\";\nimport { Form, Spinner, Button } from \"react-bootstrap\";\nimport './auth.scss'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          isSubmit: false,\n          err: false,\n          data: {\n            email: '',\n            password: '',\n          },\n        };\n      }\n  render() {\n\n    const handleChange = e => {\n      const { id, value } = e.target;\n      const { data } = this.state;\n      this.setState({\n        ...this.state,\n        data: {\n          ...data,\n          [id]: value,\n        },\n      });\n    };\n\n    const handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        isSubmit: true,\n      });\n      const { data } = this.state;\n      //authUser(data);\n      // currentUser\n      //   && loggedIn\n      //   && history.push(`/dashboard/${currentUser.username}`);\n    };\n\n    const {\n        loggedIn, username, history,\n    } = this.props;\n    const { isSubmit } = this.state;\n    return (\n      <div className=\"auth-in\">\n        <h1 className=\"auth-header py-5 text-center font-weight-bolder\">\n          Sign In\n        </h1>\n        <p className=\"auth-desc pb-5 text-center font-weight-bolder\">\n          Hey! Log In to manage your account.\n        </p>\n\n        <Form\n        className=\"user-form p-5 shadow-lg bg-white\"\n        onSubmit={handleSubmit}\n      >\n        <Form.Group controlId=\"username\" className=\"pb-3\">\n          <Form.Control\n            required\n            type=\"username\"\n            placeholder=\"Enter Username\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"email\" className=\"pb-3\">\n          <Form.Control\n            required\n            type=\"email\"\n            placeholder=\"Enter email\"\n            onChange={handleChange}\n          />\n          <Form.Text className=\"text-muted\">\n            We will never share your email with anyone else.\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"password\" className=\"pb-5\">\n          <Form.Control\n            required\n            type=\"password\"\n            placeholder=\"Password\"\n            onChange={handleChange}\n          />\n        </Form.Group>\n\n        {isSubmit && (\n          <div className=\"loading\">\n            <Spinner animation=\"grow\" variant=\"primary\" />\n          </div>\n        )}\n\n        <Button className=\"btn hero-btn w-100\" type=\"submit\">\n          Submit\n        </Button>\n        <p className=\"text-center mt-3 font-weight-bolder auth-text\">OR</p>\n        <a href=\"/signup\" className=\"my-3 text-center w-100 btn-link\">\n          {' '}\n          Register\n        </a>\n      </Form>\n      </div>\n\n      \n    );\n  }\n}\n\nexport default Login;\n","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/HomePage.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/actions/userAction.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/store/actions/successWithMessage.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/Layouts/Success.js",["101"],"import React, { Component } from \"react\";\nimport { Alert, Button } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport successWithMessage from \"../../store/actions/successWithMessage\";\n\nclass Success extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true,\n    };\n  }\n\n  componentDidMount() {\n    const { show } = this.state;\n      show &&\n      setInterval(() => {\n        this.setState({\n          show: false,\n        });\n      }, 3000);\n  }\n\n  componentDidUpdate(){\n    const { show } = this.state\n    const { successWithMessage, success } = this.props;\n    show && success.type === 'create_user' &&\n    successWithMessage(\"\");\n  }\n\n  render() {\n    const setShow = () => {\n      const { successWithMessage } = this.props;\n      successWithMessage(\"\");\n      this.setState({\n        show: false,\n      });\n    };\n\n    const { show } = this.state;\n    const { success } = this.props;\n    return (\n      <div className=\"alert-success col-sm-10 col-md-6 col-ld-4 mx-auto\">\n        <Alert\n          show={show}\n          variant=\"success\"\n          dismissible\n          onClose={() => setShow()}\n        >\n          <Alert.Heading>{success.message}</Alert.Heading>\n        </Alert>\n      </div>\n    );\n  }\n}\n\nSuccess.defaultProps = {\n  success: PropTypes.any,\n};\nSuccess.propTypes = {\n  success: PropTypes.any,\n\n  successWithMessage: PropTypes.any.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  success: state.succMsg.message,\n});\n\nexport default connect(mapStateToProps, { successWithMessage })(Success);\n","/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/User.js",["102"],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/Layouts/Footer.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/container/Dashboard.js",[],"/run/media/kelib/Data/Work/Microverse/React/ikijob-test/src/components/Layouts/Err.js",["103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":49,"column":13,"nodeType":"110","messageId":"111","endLine":49,"endColumn":21},{"ruleId":"108","severity":1,"message":"112","line":36,"column":15,"nodeType":"110","messageId":"111","endLine":36,"endColumn":19},{"ruleId":"108","severity":1,"message":"113","line":44,"column":9,"nodeType":"110","messageId":"111","endLine":44,"endColumn":17},{"ruleId":"108","severity":1,"message":"114","line":44,"column":19,"nodeType":"110","messageId":"111","endLine":44,"endColumn":27},{"ruleId":"108","severity":1,"message":"115","line":44,"column":29,"nodeType":"110","messageId":"111","endLine":44,"endColumn":36},{"ruleId":"108","severity":1,"message":"116","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":23},{"ruleId":"117","severity":1,"message":"118","line":9,"column":13,"nodeType":"119","endLine":9,"endColumn":80},{"ruleId":"108","severity":1,"message":"116","line":2,"column":17,"nodeType":"110","messageId":"111","endLine":2,"endColumn":23},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'isSubmit' is assigned a value but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'loggedIn' is assigned a value but never used.","'username' is assigned a value but never used.","'history' is assigned a value but never used.","'Button' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]